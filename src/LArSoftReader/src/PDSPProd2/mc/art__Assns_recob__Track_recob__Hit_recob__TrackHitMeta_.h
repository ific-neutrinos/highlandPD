//////////////////////////////////////////////////////////
//   This class has been generated by TFile::MakeProject
//     (Fri Apr 24 09:37:06 2020 by ROOT version 6.18/04)
//      from the StreamerInfo in file /pnfs/dune/archive/sam_managed_users/calcuttj/data/5/c/5/d/PDSPProd2_protoDUNE_sp_reco_35ms_sce_off_23503706_0_124d8226-6d53-4dbc-af94-340521eab19b_pma.root
//////////////////////////////////////////////////////////


#ifndef art__Assns_recob__Track_recob__Hit_recob__TrackHitMeta__h
#define art__Assns_recob__Track_recob__Hit_recob__TrackHitMeta__h
namespace recob {
class Track;
} // end of namespace.
namespace recob {
class Hit;
} // end of namespace.
namespace recob {
class TrackHitMeta;
} // end of namespace.
namespace art {
template <typename T0, typename T1, typename T2> class Assns;
template <> class Assns<recob::Track,recob::Hit,recob::TrackHitMeta>;
} // end of namespace.

#include "Rtypes.h"
#include "recob__Track.h"
#include "recob__Hit.h"
#include "recob__TrackHitMeta.h"
#include "art__Assns_recob__Track_recob__Hit_void_.h"
#include "Riostream.h"
#include <vector>

namespace art {
template <typename T0, typename T1, typename T2> class Assns;
template <> class Assns<recob::Track,recob::Hit,recob::TrackHitMeta> : public art::Assns<recob::Track,recob::Hit,void> {

public:
// Nested classes declaration.

public:
// Data Members.
   vector<recob::TrackHitMeta> data_;       //

   Assns();
   Assns(Assns && ) = default;
   Assns(const Assns & );
   virtual ~Assns();

   ClassDef(Assns,12); // Generated by MakeProject.
};
} // namespace
#endif
