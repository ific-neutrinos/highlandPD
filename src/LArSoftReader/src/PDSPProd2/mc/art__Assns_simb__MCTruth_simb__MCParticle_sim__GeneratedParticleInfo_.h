//////////////////////////////////////////////////////////
//   This class has been generated by TFile::MakeProject
//     (Fri Apr 24 09:37:05 2020 by ROOT version 6.18/04)
//      from the StreamerInfo in file /pnfs/dune/archive/sam_managed_users/calcuttj/data/5/c/5/d/PDSPProd2_protoDUNE_sp_reco_35ms_sce_off_23503706_0_124d8226-6d53-4dbc-af94-340521eab19b_pma.root
//////////////////////////////////////////////////////////


#ifndef art__Assns_simb__MCTruth_simb__MCParticle_sim__GeneratedParticleInfo__h
#define art__Assns_simb__MCTruth_simb__MCParticle_sim__GeneratedParticleInfo__h
namespace simb {
class MCTruth;
} // end of namespace.
namespace simb {
class MCParticle;
} // end of namespace.
namespace sim {
class GeneratedParticleInfo;
} // end of namespace.
namespace art {
template <typename T0, typename T1, typename T2> class Assns;
template <> class Assns<simb::MCTruth,simb::MCParticle,sim::GeneratedParticleInfo>;
} // end of namespace.

#include "Rtypes.h"
#include "simb__MCTruth.h"
#include "simb__MCParticle.h"
#include "sim__GeneratedParticleInfo.h"
#include "art__Assns_simb__MCTruth_simb__MCParticle_void_.h"
#include "Riostream.h"
#include <vector>

namespace art {
template <typename T0, typename T1, typename T2> class Assns;
template <> class Assns<simb::MCTruth,simb::MCParticle,sim::GeneratedParticleInfo> : public art::Assns<simb::MCTruth,simb::MCParticle,void> {

public:
// Nested classes declaration.

public:
// Data Members.
   vector<sim::GeneratedParticleInfo> data_;       //

   Assns();
   Assns(Assns && ) = default;
   Assns(const Assns & );
   virtual ~Assns();

   ClassDef(Assns,12); // Generated by MakeProject.
};
} // namespace
#endif
