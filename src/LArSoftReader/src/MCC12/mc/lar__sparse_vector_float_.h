//////////////////////////////////////////////////////////
//   This class has been generated by TFile::MakeProject
//     (Tue Jun  4 02:53:16 2019 by ROOT version 6.12/06)
//      from the StreamerInfo in file /pnfs/dune/scratch/users/tjyang/v08_21_00/reco/mcc12_protodune_beam_p1GeV_cosmics_12ms_test/19285494_84/mcc12_protodune_beam_p1GeV_cosmics_12ms_test_84_20190601T145951_reco0.root
//////////////////////////////////////////////////////////


#ifndef lar__sparse_vector_float__h
#define lar__sparse_vector_float__h
namespace lar {
template <typename T0> class sparse_vector;
template <> class sparse_vector<float>;
} // end of namespace.

#include "Rtypes.h"
#include "Riostream.h"
#include <vector>
#include "lar__sparse_vector_float_.h"
#include "lar__range_t_unsigned_long_.h"

namespace lar {
template <typename T0> class sparse_vector;
template <> class sparse_vector<float> {

public:
// Nested classes forward declaration.
class datarange_t;

public:
// Nested classes declaration.
class datarange_t : public lar::range_t<unsigned long> {

public:
// Nested classes declaration.

public:
// Data Members.
   vector<float> values;      //data in the range

   datarange_t();
   datarange_t(const datarange_t & );
   virtual ~datarange_t();

};

public:
// Data Members.
   unsigned long nominal_size;    //current size
   vector<lar::sparse_vector<float>::datarange_t> ranges;          //list of ranges

   sparse_vector();
   sparse_vector(const sparse_vector & );
   virtual ~sparse_vector();

};
} // namespace
#endif
