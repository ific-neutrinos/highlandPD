//////////////////////////////////////////////////////////
//   This class has been generated by TFile::MakeProject
//     (Thu Feb 13 18:14:53 2020 by ROOT version 6.16/00)
//      from the StreamerInfo in file ../PDSPProd2_protoDUNE_sp_reco_35ms_sce_off_23473772_0_452d9f89-a2a1-4680-ab72-853a3261da5d.root
//////////////////////////////////////////////////////////


#ifndef recob__Trajectory_h
#define recob__Trajectory_h
namespace recob {
class Trajectory;
} // end of namespace.

#include "Rtypes.h"
#include "Riostream.h"
#include <vector>
#include "Math/GenVector/PositionVector3D.h"
#include "Math/GenVector/Cartesian3D.h"
#include "Math/GenVector/CoordinateSystemTags.h"
#include "Math/GenVector/DisplacementVector3D.h"

namespace recob {
class Trajectory {

public:
// Nested classes declaration.

public:
// Data Members.
   vector<ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::GlobalCoordinateSystemTag> > fPositions;    //List of points the trajectory goes through.
   vector<ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::GlobalCoordinateSystemTag> > fMomenta;      //Momentum of each of the points in trajectory.
   bool                                                                                                                 fHasMomentum;    //Whether we have momentum modulus information.

   Trajectory();
   Trajectory(const Trajectory & );
   virtual ~Trajectory();

   ClassDef(Trajectory,13); // Generated by MakeProject.
};
} // namespace
#endif
