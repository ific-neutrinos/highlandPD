//////////////////////////////////////////////////////////
//   This class has been generated by TFile::MakeProject
//     (Thu Feb 14 10:40:59 2019 by ROOT version 6.12/06)
//      from the StreamerInfo in file /hep/DUNE/DataDir/MCC11/mcc11_protoDUNE_sp_reco_12231045_0_1ee4e6cf-25fb-482c-a231-fbd91e816aa4.root
//////////////////////////////////////////////////////////


#ifndef recob__Track_h
#define recob__Track_h
namespace recob {
class Track;
} // end of namespace.

#include "Rtypes.h"
#include "recob__TrackTrajectory.h"
#include "Math/SMatrix.h"
#include "Math/MatrixRepresentationsStatic.h"
#include "Riostream.h"
#include <vector>
namespace std {} using namespace std;

namespace recob {
class Track {

public:
// Nested classes declaration.

public:
// Data Members.
   recob::TrackTrajectory fTraj;       //Stored trajectory data member
   int                    fPId;        //Particle ID hypothesis used in the fit (if any)
   float                  fChi2;       //Fit chi2
   int                    fNdof;       //Number of degrees of freedom of the fit
   ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> > fCovVertex;    //Covariance matrix (local 5D representation) at start point (vertex)
   ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> > fCovEnd;       //Covariance matrix (local 5D representation) at end point
   int                                                              fID;           //track's ID
   vector<vector<double> >                                          fdQdx;         //charge deposition per unit length at points

   Track();
   Track(const Track & );
   virtual ~Track();

   ClassDef(Track,16); // Generated by MakeProject.
};
} // namespace
#endif
